var PolyK={};PolyK.IsSimple=function(n){var t=n.length>>1;if(4>t)return!0;for(var r=new PolyK._P,e=new PolyK._P,o=new PolyK._P,l=new PolyK._P,y=new PolyK._P,i=0;t>i;i++){r.x=n[2*i],r.y=n[2*i+1],i==t-1?(e.x=n[0],e.y=n[1]):(e.x=n[2*i+2],e.y=n[2*i+3]);for(var a=0;t>a;a++)if(!(Math.abs(i-a)<2||a==t-1&&0==i||i==t-1&&0==a||(o.x=n[2*a],o.y=n[2*a+1],a==t-1?(l.x=n[0],l.y=n[1]):(l.x=n[2*a+2],l.y=n[2*a+3]),null==PolyK._GetLineIntersection(r,e,o,l,y))))return!1}return!0},PolyK.IsConvex=function(n){if(n.length<6)return!0;for(var t=n.length-4,r=0;t>r;r+=2)if(!PolyK._convex(n[r],n[r+1],n[r+2],n[r+3],n[r+4],n[r+5]))return!1;return PolyK._convex(n[t],n[t+1],n[t+2],n[t+3],n[0],n[1])&&PolyK._convex(n[t+2],n[t+3],n[0],n[1],n[2],n[3])?!0:!1},PolyK.GetArea=function(n){if(n.length<6)return 0;for(var t=n.length-2,r=0,e=0;t>e;e+=2)r+=(n[e+2]-n[e])*(n[e+1]+n[e+3]);return r+=(n[0]-n[t])*(n[t+1]+n[1]),.5*-r},PolyK.GetAABB=function(n){for(var t=1/0,r=1/0,e=-t,o=-r,l=0;l<n.length;l+=2)t=Math.min(t,n[l]),e=Math.max(e,n[l]),r=Math.min(r,n[l+1]),o=Math.max(o,n[l+1]);return{x:t,y:r,width:e-t,height:o-r}},PolyK.Reverse=function(n){for(var t=[],r=n.length-2;r>=0;r-=2)t.push(n[r],n[r+1]);return t},PolyK.Triangulate=function(n){var t=n.length>>1;if(3>t)return[];for(var r=[],e=[],o=0;t>o;o++)e.push(o);for(var o=0,l=t;l>3;){var y=e[(o+0)%l],i=e[(o+1)%l],a=e[(o+2)%l],P=n[2*y],u=n[2*y+1],x=n[2*i],f=n[2*i+1],s=n[2*a],K=n[2*a+1],h=!1;if(PolyK._convex(P,u,x,f,s,K)){h=!0;for(var v=0;l>v;v++){var _=e[v];if(_!=y&&_!=i&&_!=a&&PolyK._PointInTriangle(n[2*_],n[2*_+1],P,u,x,f,s,K)){h=!1;break}}}if(h)r.push(y,i,a),e.splice((o+1)%l,1),l--,o=0;else if(o++>3*l)break}return r.push(e[0],e[1],e[2]),r},PolyK.ContainsPoint=function(n,t,r){for(var e,o=n.length>>1,l=n[2*o-3]-r,y=n[2*o-2]-t,i=n[2*o-1]-r,a=0;o>a;a++)e=y,l=i,y=n[2*a]-t,i=n[2*a+1]-r,l!=i&&(lup=i>l);for(var P=0,a=0;o>a;a++)if(e=y,l=i,y=n[2*a]-t,i=n[2*a+1]-r,!(0>l&&0>i||l>0&&i>0||0>e&&0>y)){if(l==i&&Math.min(e,y)<=0)return!0;if(l!=i){var u=e+(y-e)*-l/(i-l);if(0==u)return!0;u>0&&P++,0==l&&lup&&i>l&&P--,0==l&&!lup&&l>i&&P--,lup=i>l}}return 1==(1&P)},PolyK.Slice=function(n,t,r,e,o){if(PolyK.ContainsPoint(n,t,r)||PolyK.ContainsPoint(n,e,o))return[n.slice(0)];for(var l=new PolyK._P(t,r),y=new PolyK._P(e,o),i=[],a=[],P=0;P<n.length;P+=2)a.push(new PolyK._P(n[P],n[P+1]));for(var P=0;P<a.length;P++){var u=new PolyK._P(0,0);u=PolyK._GetLineIntersection(l,y,a[P],a[(P+1)%a.length],u);var x=i[0],f=i[i.length-1];u&&(null==x||PolyK._P.dist(u,x)>1e-10)&&(null==f||PolyK._P.dist(u,f)>1e-10)&&(u.flag=!0,i.push(u),a.splice(P+1,0,u),P++)}if(i.length<2)return[n.slice(0)];var s=function(n,t){return PolyK._P.dist(l,n)-PolyK._P.dist(l,t)};i.sort(s);for(var K=[],h=0;i.length>0;){var v=(a.length,i[0]),_=i[1],c=a.indexOf(v),g=a.indexOf(_),p=!1;if(PolyK._firstWithFlag(a,c)==g?p=!0:(v=i[1],_=i[0],c=a.indexOf(v),g=a.indexOf(_),PolyK._firstWithFlag(a,c)==g&&(p=!0)),p){h--;var d=PolyK._getPoints(a,c,g);K.push(d),a=PolyK._getPoints(a,g,c),v.flag=_.flag=!1,i.splice(0,2),0==i.length&&K.push(a)}else h++,i.reverse();if(h>1)break}for(var I=[],P=0;P<K.length;P++){for(var m=K[P],M=[],w=0;w<m.length;w++)M.push(m[w].x,m[w].y);I.push(M)}return I},PolyK.Raycast=function(n,t,r,e,o,l){var y=n.length-2,i=PolyK._tp,a=i[0],P=i[1],u=i[2],x=i[3],f=i[4];a.x=t,a.y=r,P.x=t+e,P.y=r+o,null==l&&(l={dist:0,edge:0,norm:{x:0,y:0},refl:{x:0,y:0}}),l.dist=1/0;for(var s=0;y>s;s+=2){u.x=n[s],u.y=n[s+1],x.x=n[s+2],x.y=n[s+3];var K=PolyK._RayLineIntersection(a,P,u,x,f);K&&PolyK._updateISC(e,o,a,u,x,f,s/2,l)}u.x=x.x,u.y=x.y,x.x=n[0],x.y=n[1];var K=PolyK._RayLineIntersection(a,P,u,x,f);return K&&PolyK._updateISC(e,o,a,u,x,f,n.length/2-1,l),l.dist!=1/0?l:null},PolyK.ClosestEdge=function(n,t,r,e){var o=n.length-2,l=PolyK._tp,y=l[0],i=l[2],a=l[3];l[4];y.x=t,y.y=r,null==e&&(e={dist:0,edge:0,point:{x:0,y:0},norm:{x:0,y:0}}),e.dist=1/0;for(var P=0;o>P;P+=2)i.x=n[P],i.y=n[P+1],a.x=n[P+2],a.y=n[P+3],PolyK._pointLineDist(y,i,a,P>>1,e);i.x=a.x,i.y=a.y,a.x=n[0],a.y=n[1],PolyK._pointLineDist(y,i,a,o>>1,e);var u=1/e.dist;return e.norm.x=(t-e.point.x)*u,e.norm.y=(r-e.point.y)*u,e},PolyK._pointLineDist=function(n,t,r,e,o){var l,y,i=n.x,a=n.y,P=t.x,u=t.y,x=r.x,f=r.y,s=i-P,K=a-u,h=x-P,v=f-u,_=s*h+K*v,c=h*h+v*v,g=_/c;0>g||P==x&&u==f?(l=P,y=u):g>1?(l=x,y=f):(l=P+g*h,y=u+g*v);var p=i-l,d=a-y,I=Math.sqrt(p*p+d*d);I<o.dist&&(o.dist=I,o.edge=e,o.point.x=l,o.point.y=y)},PolyK._updateISC=function(n,t,r,e,o,l,y,i){var a=PolyK._P.dist(r,l);if(a<i.dist){var P=1/PolyK._P.dist(e,o),u=-(o.y-e.y)*P,x=(o.x-e.x)*P,f=2*(n*u+t*x);i.dist=a,i.norm.x=u,i.norm.y=x,i.refl.x=-f*u+n,i.refl.y=-f*x+t,i.edge=y}},PolyK._getPoints=function(n,t,r){var e=n.length,o=[];t>r&&(r+=e);for(var l=t;r>=l;l++)o.push(n[l%e]);return o},PolyK._firstWithFlag=function(n,t){for(var r=n.length;;)if(t=(t+1)%r,n[t].flag)return t},PolyK._PointInTriangle=function(n,t,r,e,o,l,y,i){var a=y-r,P=i-e,u=o-r,x=l-e,f=n-r,s=t-e,K=a*a+P*P,h=a*u+P*x,v=a*f+P*s,_=u*u+x*x,c=u*f+x*s,g=1/(K*_-h*h),p=(_*v-h*c)*g,d=(K*c-h*v)*g;return p>=0&&d>=0&&1>p+d},PolyK._RayLineIntersection=function(n,t,r,e,o){var l=n.x-t.x,y=r.x-e.x,i=n.y-t.y,a=r.y-e.y,P=l*a-i*y;if(0==P)return null;var u=n.x*t.y-n.y*t.x,x=r.x*e.y-r.y*e.x,f=o,s=1/P;return f.x=(u*y-l*x)*s,f.y=(u*a-i*x)*s,PolyK._InRect(f,r,e)?i>0&&f.y>n.y||0>i&&f.y<n.y?null:l>0&&f.x>n.x||0>l&&f.x<n.x?null:f:null},PolyK._GetLineIntersection=function(n,t,r,e,o){var l=n.x-t.x,y=r.x-e.x,i=n.y-t.y,a=r.y-e.y,P=l*a-i*y;if(0==P)return null;var u=n.x*t.y-n.y*t.x,x=r.x*e.y-r.y*e.x,f=o;return f.x=(u*y-l*x)/P,f.y=(u*a-i*x)/P,PolyK._InRect(f,n,t)&&PolyK._InRect(f,r,e)?f:null},PolyK._InRect=function(n,t,r){var e=Math.min(t.x,r.x),o=Math.max(t.x,r.x),l=Math.min(t.y,r.y),y=Math.max(t.y,r.y);return e==o?l<=n.y&&n.y<=y:l==y?e<=n.x&&n.x<=o:e<=n.x+1e-10&&n.x-1e-10<=o&&l<=n.y+1e-10&&n.y-1e-10<=y},PolyK._convex=function(n,t,r,e,o,l){return(t-e)*(o-r)+(r-n)*(l-e)>=0},PolyK._P=function(n,t){this.x=n,this.y=t,this.flag=!1},PolyK._P.prototype.toString=function(){return"Point ["+this.x+", "+this.y+"]"},PolyK._P.dist=function(n,t){var r=t.x-n.x,e=t.y-n.y;return Math.sqrt(r*r+e*e)},PolyK._tp=[];for(var i=0;10>i;i++)PolyK._tp.push(new PolyK._P(0,0));